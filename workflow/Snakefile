outfolder = "../results"

rule all:
    input:
        f"{outfolder}/PES.png",
        "../results/ZFS_SOC_4roots",
        "../results/ZFS_SOC_9roots",
        "../results/ZFS_SOCSSC_4roots",
        "../results/ZFS_SOCSSC_9roots",
        "../results/MoHIPT_gvalues",
        "../results/times_RME",
        "../results/times_sigma"

rule extract_transitionenergies:
    input:
        ORCAfile = "../resources/ORCA/O2/CAS_12_60_9roots/mol.mpi24.out"
    output:
        f"{outfolder}/ICE_transition_energies"
    params:
        outfolder = outfolder
    shell:
        "julia scripts/extract_transitionenergies.jl {input.ORCAfile} {params.outfolder}"

rule plot_PES:
    input:
        "../resources/exp_PES/data_a.csv",
        "../resources/exp_PES/data_A.csv",
        "../resources/exp_PES/data_b.csv",
        "../resources/exp_PES/data_B.csv",
        "../resources/exp_PES/data_c.csv",
        "../resources/exp_PES/data_C.csv",
        "../resources/exp_PES/data_X.csv",
        transitionenergy_file = f"{outfolder}/ICE_transition_energies"
    output:
        f"{outfolder}/PES.png"
    params:
        outfolder = outfolder
    conda:
        "envs/scipy_numpy_mpl.yaml"
    shell:
        "python scripts/plot_PES.py ../resources/exp_PES {input.transitionenergy_file} {params.outfolder}"
        
rule extract_ZFS:
    input:
        "../resources/ORCA/O2/CAS_12_60_{num}roots/mol.mpi24.out"
    output:
        "../results/ZFS_{settings}_{num}roots"
    shell:
        "julia scripts/extract_ZFS.jl {input} {wildcards.settings} {output}"

rule extract_gvalues:
    input:
        "../resources/ORCA/MoHIPT/STEP5_CASCI_49_33_gtensor/mol.mpi24.out"
    output:
        "../results/MoHIPT_gvalues"
    shell:
        "julia scripts/extract_gvalues.jl {input} {output}"

rule extract_timings:
    input:
        "../resources/ORCA/O2/CAS_12_60_9roots/mol.mpi24.out"
    output:
        "../results/times_sigma",
        "../results/times_RME"
    shell:
        "julia scripts/extract_timings.jl {input} {output[0]} {output[1]}"

